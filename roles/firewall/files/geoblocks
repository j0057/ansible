#!/usr/bin/env python2.7

import csv
import os
import sys
import zipfile
import StringIO

import requests

format_ip_num = lambda n: "{0}.{1}.{2}.{3}".format(
    (n & 0xff000000) >> 24,
    (n & 0x00ff0000) >> 16,
    (n & 0x0000ff00) >> 8,
    (n & 0x000000ff) >> 0)

get_host_bits = lambda a, b: a ^ b 
get_net_bits = lambda hb: hb ^ 0xffffffff
get_netmask = lambda nb: bin(nb).count('1')

def deaggregate(start, end):
    # shamelessly ripped from ipcalc.pl [http://jodies.de/ipcalc]
    base = start
    while base <= end:
        step = 0
        while (base | (1 << step)) != base:
            if base | (0xffffffff >> (31 - step)) > end:
                break
            step += 1
        yield (base, 32-step)
        base += 1 << step

def get_all_blocks(url):
    response = requests.get(url)
    response.raise_for_status()
    with zipfile.ZipFile(StringIO.StringIO(response.content)) as geolite_zip:
        with geolite_zip.open('GeoIPCountryWhois.csv') as geolite_csv:
            reader = csv.reader(geolite_csv)
            for row in reader:
                (ip_start, ip_end, ip_num_start, ip_num_end, cc, country) = row
                ip_num_start = int(ip_num_start)
                ip_num_end = int(ip_num_end)

                host_bits = get_host_bits(ip_num_start, ip_num_end)
                net_bits = get_net_bits(host_bits)
                netmask = get_netmask(net_bits)
                
                if netmask == 0: 
                    sys.stderr.write("warning: /0 detected: {0!r}\n".format(row))
                    continue

                for (n, m) in deaggregate(ip_num_start, ip_num_end):
                    yield (format_ip_num(n), m, cc.lower())

if __name__ == '__main__':
    url = os.environ['GEOLITE_URL']
    countries = sys.argv[1:]
    for (network, netmask, cc) in get_all_blocks(url):
        if cc not in countries:
            continue
        print '{0} {1}/{2}'.format(cc, network, netmask)

