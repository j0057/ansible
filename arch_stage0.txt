#!/bin/bash

message() {
    echo -en "\n\e[1;37m==> $1\e[0;0m\n\n"
}
export -f message

lines() {
    target="$1"
    message "Configuring $target"
    shift
    while [ -n "$1" ]; do
        echo "$1" >> "$target"
        shift
    done
}
export -f lines

partition-with-sgdisk() {
    local i j num size typecode label fstype mountpoint
    case ${parttype} in
        mbr) sgdisk ${disk} --mbrtogpt --zap-all ;;
        gpt) sgdisk ${disk} --zap-all ;;
    esac
    for i in $(eval echo "{1..$#}"); do
        for j in $(eval echo "{1..$#}"); do
            read num size typecode label fstype mountpoint <<< "${!j}"
            if [ "${num}" = "${i}" ]; then
                sgdisk ${disk} --new ${i}:${size} --typecode ${i}:${typecode} --change-name ${i}:${label}
            fi
        done
    done
    if [ ${parttype} = mbr ]; then
        sgdisk ${disk} --gpttombr 1:2:3:4
    fi
    partprobe
    case ${parttype} in
        mbr) sfdisk ${disk} --list ;;
        gpt) sgdisk --print ;;
    esac
}

partition-format() {
    local i num size typecode label fstype mountpoint
    for i in $(eval echo "{1..$#}"); do
        read num size typecode label fstype mountpoint <<< "${!i}"
        case ${fstype} in
            ext4)
                mkfs.ext4 -L ${label} ${disk}${num}
                ;;
            btrfs)
                mkfs.btrfs -L ${label} ${disk}${num}
                ;;
            swap)
                mkswap -L ${label} ${disk}${num}
                ;;
            *)
                echo "unknown fstype ${fstype}, bailing out"
                exit 1
        esac
    done
}

partition-mount() {
    local i num size typecode label fstype mountpoint
    for i in $(eval echo "{1..$#}"); do
        read index size typecode label fstype mountpoint <<< "${!i}"
        case ${fstype} in
            swap)
                swapon /dev/${disk}${num}
                ;;
            *)
                mkdir -vp /mnt${mountpoint}
                mount -v LABEL=${label} /mnt${mountpoint}
                ;;
        esac
    done
}

partition() {
    disk=$1
    parttype=$2
    shift 2

    message "Partitioning with sgdisk"
    partition-with-sgdisk "$@"

    message "Formatting"
    partition-format "$@"

    message "Mounting"
    partition-mount "$@"
}
export -f partition partition-with-sgdisk partition-format partition-mount

INSTALL_PACKAGES=$(sed 's/\s\+/ /g' <<< "${INSTALL_PACKAGES//$'\n'/ }")
INSTALL_SERVICES=$(sed 's/\s\+/ /g' <<< "${INSTALL_SERVICES//$'\n'/ }")

for var in `set | sed -n '/^INSTALL_/s/=.*//p'`; do
    read -p "$var: " -e -i "${!var}" $var 0<&4
done

message "Starting stage 1"
bash -e <(curl -sv "http://${INSTALL_HOST}/arch_stage1.txt")

message "Starting stage 2 in chroot"
arch-chroot /mnt bash -e <(curl -sv "http://${INSTALL_HOST}/arch_stage2.txt")

message "Unmounting"
umount -R /mnt
swapoff -a
