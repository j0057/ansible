#!/bin/bash

message() {
    echo -en "\n\e[1;37m==> $1\e[0;0m\n\n"
}
export -f message

lines() {
    target="$1"
    message "Configuring $target"
    shift
    while [ -n "$1" ]; do
        echo "$1" >> "$target"
        shift
    done
}
export -f lines

partition() {
    # 0:index ; 1:size ; 2:typecode ; 3:label ; 4:filesystem ; 5:mountpoint
    disk=$1 ; shift
    i=0 ; while [ "$#" -gt 0 ]; do args[i++]=$1 ; shift ; done

    message "Partitioning"
    sgdisk $disk --zap-all
    for (( i=1 ; i <= ${#args[*]} ; i++ )) ; do
        for (( j=0 ; j < ${#args[*]} ; j++ )) ; do
            read -a a <<< "${args[j]}"
            if [ "${a[0]}" = "${i}" ]; then
                sgdisk $disk --new ${i}:${a[1]} --typecode ${i}:${a[2]} --change-name ${i}:${a[3]}
                break
            fi
        done
    done
    sgdisk --print

    message "Formatting"
    for (( j=0 ; j < ${#args[*]} ; j++ )) ; do
        read -a a <<< "${args[j]}"
        case ${a[4]} in
            ext4)
                mkfs.ext4 -L ${a[3]} ${disk}${a[0]}
                ;;
            btrfs)
                mkfs.btrfs -L ${a[3]} ${disk}${a[0]}
                ;;
        esac
    done

    message "Mounting"
    for (( j=0 ; j < ${#args[*]} ; j++ )) ; do
        read -a a <<< "${args[j]}"
        if [ "${a[5]}" = "-" ]; then
            continue
        fi
        mkdir -v -p /mnt${a[5]}
        mount -v LABEL=${a[3]} /mnt${a[5]}
    done
}
export -f partition

for var in `set | sed -n '/^INSTALL_/s/=.*//p'`; do
    read -p "$var: " -e -i "${!var}" $var 0<&4
done

message "Starting stage 1"
bash -e <(curl -sv "http://${INSTALL_HOST}/arch_stage1.txt")

message "Starting stage 2 in chroot"
arch-chroot /mnt bash -e <(curl -sv "http://${INSTALL_HOST}/arch_stage2.txt")

message "Unmounting"
umount -R /mnt
