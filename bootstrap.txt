-- steps for bootstrapping config server :

1. aur from root (build-aur.conf [0A] and pacman.conf [0B])
2. apply config from other machine (--ask-pass to use sshpass)
3. change passwords
4. clone dotfiles (submodules!) & aur (copy build-aur.conf from root) [4] 
5. create directories and bootstrap pip 
6. install & patch ansible ... [6]
7. clone config
8. apply config from arch-vbox-1 to config host
9. build python packages
10. apply config from arch-vbox-1 to server host or all hosts

-- config files :

[0A] /root/aur/build-aur.conf @ config :

    PKGS=(python2-pydns python2-pyspf python2-postfix-policyd-spf)
    REPO=/var/lib/aur_x86_64

[0B] /etc/pacman.conf @ config :

    [aur_x86_64]
    SigLevel = Never
    Server = file:///var/lib/aur_x86_64

[4] /home/jjm/git/dotfiles/bin/pip-config.conf @ config :

    PKG=/var/lib/pypkg27/x86_64
    SRC=/var/lib/pypkg27/src

[6] /home/jjm/.local/lib/python2.7/site-packages/ansible/module_utils/basic.py @ config : (line 184)

    supported_dists = platform._supported_dists + ('arch',)
    distribution = platform.linux_distribution(supported_dists=supported_dists)[0].capitalize()

-- building packages :

# sh
(git clone -o github github.com:j0057/sh && cd sh && pip-release)

# xmlist
(git clone -o github github.com:j0057/xmlist && cd xmlist && pip-release)

# xhttp
(git clone -o github github.com:j0057/xhttp && cd xhttp && ./setup.py -q metadata -k x_dist_names > requirements.txt && pip-download -r requirements.txt && pip-build -r requirements.txt && pip-release)

# mp3
(git clone -o github github.com:j0057/mp3 && cd mp3 && ./setup.py -q metadata -k x_dist_names > requirements.txt && pip-download -r requirements.txt && pip-build -r requirements.txt && pip-release)

# core
(git clone -o github github.com:j0057/core && cd core && ./setup.py -q metadata -k install_requires > requirements.txt && pip-download -r requirements.txt && pip-build -r requirements.txt && pip-release)

# musicdb
(git clone -o github github.com:j0057/musicdb && cd musicdb && ./setup.py -q metadata -k x_dist_names > requirements.txt && pip-download -r requirements.txt && pip-build -r requirements.txt && pip-release)

# twitter
(git clone -o github github.com:j0057/twitter && cd twitter && git checkout package && pip-download -r requirements.txt && pip-build -r requirements.txt && pip-release)

# dns
(git clone -o github github.com:j0057/dns && cd dns && ./setup.py -q metadata -k x_dist_names > requirements.txt && pip-download -r requirements.txt && pip-build -r requirements.txt && pip-release)

# hello
(git clone -o bitbucket bitbucket.org:JoostMolenaar/hello && cd hello && pip-release)

-- deps:
sh : ~
xmlist : coverage
xhttp : python-dayteutil | xmlist
mp3 : pillow mutagen unidecode fusepy | xhttp sh xmlist
core : mysql-python lxml pytz webob
musicdb : pygraphviz | core
twitter : pyephem pytz python-dateutil requests mock coverage unidecode pillow python-prctl
dns : pygraphviz | xmlist xhttp
hello : ~

pip-bootstrap : coverage githubrelease pip setuptools setuptools-metadata setuptools-version-command tox twine virtualenv wheel
s
